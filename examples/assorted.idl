// NOTE: see notes in main.cpp as to how we will support this
module foo {
	projection < struct net_device > simp_circ {
        projection simp_circ *a;
    }

    projection < struct net_device > circ_a {
        projection circ_b [in] *a;
        unsigned int arr_len;
        array<u32, {{ptr->arr_len}}>* arr;
    }

    projection < struct net_device > circ_b {
        projection circ_a *a;
        const signed char* c;
        projection circ_a [alloc<{{sizeof(int) * 128}}>(callee)]* but_bigger;
    }

    rpc projection simp_circ* foo(projection circ_a [out]* a, projection circ_b* b, projection call_proj* c) {
        projection <struct net_device> call_proj {
            array<int, {{call_ctx->a->arr_len}}> dyn_array;
        }
    }

    rpc void bind_member_rpc(array<u32, {{ptr->arr_len}}> [unused, bind_memberof<struct net_device, arr>(caller)]* arr)
    {}
}
